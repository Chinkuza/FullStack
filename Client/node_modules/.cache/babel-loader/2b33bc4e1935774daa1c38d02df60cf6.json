{"ast":null,"code":"var _jsxFileName = \"/Users/juanrosario/Documents/HTMLphones/Client/src/Components/Products/index.js\";\nimport React from \"react\";\nimport Productheader from \"./productheader\";\nimport fetch from \"isomorphic-fetch\";\nimport ProductShell from \"./Product\";\nconst productsEndpoint = \"/allPhones\";\nconst initialState = {\n  products: [],\n  error: false\n};\n\nclass Product extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = initialState;\n  }\n\n  //didmount\n  async componentDidMount() {\n    try {\n      const data = await fetch(productsEndpoint);\n      const jsonData = await data.json(); //Sets state to parsed json data\n\n      this.setState({\n        products: jsonData\n      }, () => {\n        //logs to make sure state worked\n        console.log(this.state.products);\n      });\n    } catch (err) {\n      console.log(err);\n      this.setState({\n        error: true\n      });\n    }\n  }\n\n  render() {\n    const products = this.state.products.map(product => React.createElement(ProductShell, {\n      image: product.image,\n      name: product.Names,\n      price: product.price,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }));\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Productheader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), products) // <div>\n    //   {this.state.products.map(e => {\n    //     return (\n    //       <div>\n    //         <h1>{e[\"Names\"]}</h1>\n    //         <img src={e[\"URL\"]}></img>\n    //       </div>\n    //     );\n    //   })}\n    // </div>\n    ;\n  }\n\n}\n\nexport default Product;","map":{"version":3,"sources":["/Users/juanrosario/Documents/HTMLphones/Client/src/Components/Products/index.js"],"names":["React","Productheader","fetch","ProductShell","productsEndpoint","initialState","products","error","Product","Component","state","componentDidMount","data","jsonData","json","setState","console","log","err","render","map","product","image","Names","price"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,OAAOC,YAAP,MAAyB,WAAzB;AAEA,MAAMC,gBAAgB,GAAG,YAAzB;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,EADS;AAEnBC,EAAAA,KAAK,EAAE;AAFY,CAArB;;AAKA,MAAMC,OAAN,SAAsBR,KAAK,CAACS,SAA5B,CAAsC;AAAA;AAAA;AAAA,SACpCC,KADoC,GAC5BL,YAD4B;AAAA;;AAGpC;AACA,QAAMM,iBAAN,GAA0B;AACxB,QAAI;AACF,YAAMC,IAAI,GAAG,MAAMV,KAAK,CAACE,gBAAD,CAAxB;AACA,YAAMS,QAAQ,GAAG,MAAMD,IAAI,CAACE,IAAL,EAAvB,CAFE,CAGF;;AACA,WAAKC,QAAL,CAAc;AAAET,QAAAA,QAAQ,EAAEO;AAAZ,OAAd,EAAsC,MAAM;AAC1C;AACAG,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,KAAL,CAAWJ,QAAvB;AACD,OAHD;AAID,KARD,CAQE,OAAOY,GAAP,EAAY;AACZF,MAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AACA,WAAKH,QAAL,CAAc;AAAER,QAAAA,KAAK,EAAE;AAAT,OAAd;AACD;AACF;;AACDY,EAAAA,MAAM,GAAG;AACP,UAAMb,QAAQ,GAAG,KAAKI,KAAL,CAAWJ,QAAX,CAAoBc,GAApB,CAAwBC,OAAO,IAC9C,oBAAC,YAAD;AACE,MAAA,KAAK,EAAEA,OAAO,CAACC,KADjB;AAEE,MAAA,IAAI,EAAED,OAAO,CAACE,KAFhB;AAGE,MAAA,KAAK,EAAEF,OAAO,CAACG,KAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADe,CAAjB;AAQA,WACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEGlB,QAFH,CADF,CAKE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdF;AAgBD;;AA3CmC;;AA8CtC,eAAeE,OAAf","sourcesContent":["import React from \"react\";\nimport Productheader from \"./productheader\";\nimport fetch from \"isomorphic-fetch\";\nimport ProductShell from \"./Product\";\n\nconst productsEndpoint = \"/allPhones\";\nconst initialState = {\n  products: [],\n  error: false\n};\n\nclass Product extends React.Component {\n  state = initialState;\n\n  //didmount\n  async componentDidMount() {\n    try {\n      const data = await fetch(productsEndpoint);\n      const jsonData = await data.json();\n      //Sets state to parsed json data\n      this.setState({ products: jsonData }, () => {\n        //logs to make sure state worked\n        console.log(this.state.products);\n      });\n    } catch (err) {\n      console.log(err);\n      this.setState({ error: true });\n    }\n  }\n  render() {\n    const products = this.state.products.map(product => (\n      <ProductShell\n        image={product.image}\n        name={product.Names}\n        price={product.price}\n      />\n    ));\n\n    return (\n      <React.Fragment>\n        <Productheader />\n        {products}\n      </React.Fragment>\n      // <div>\n      //   {this.state.products.map(e => {\n      //     return (\n      //       <div>\n      //         <h1>{e[\"Names\"]}</h1>\n      //         <img src={e[\"URL\"]}></img>\n      //       </div>\n      //     );\n      //   })}\n      // </div>\n    );\n  }\n}\n\nexport default Product;\n"]},"metadata":{},"sourceType":"module"}