{"ast":null,"code":"var _jsxFileName = \"/Users/juanrosario/Documents/HTMLphones/Client/src/Components/Products/index.js\";\nimport React from \"react\";\nimport Productheader from \"./productheader\";\nimport fetch from \"isomorphic-fetch\";\nimport ProductShell from \"./Product\";\nconst productsEndpoint = \"/allPhones\";\nconst initialState = {\n  products: [],\n  error: false\n};\nexport class Product extends React.Component {\n  constructor() {\n    super();\n    this.state = initialState;\n  }\n\n  async componentDidMount() {\n    try {\n      const data = await fetch(productsEndpoint);\n      const jsonData = await data.json();\n      this.setState({\n        products: jsonData\n      }, () => {\n        console.log(this.state.products);\n      });\n    } catch (err) {\n      console.log(err);\n      this.setState({\n        error: true\n      });\n    }\n  }\n\n  render() {\n    // const products = this.state.products.map(product => (\n    //   <ProductShell\n    //     image={product.image}\n    //     name={product.Names}\n    //     price={product.price}\n    //   />\n    // ));\n    return (// <React.Fragment>\n      //   <Productheader />\n      //   {products}\n      // </React.Fragment>\n      React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, this.state.products.map(e => {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, e.names), \";\");\n      }))\n    );\n  }\n\n}\nexport default Product;","map":{"version":3,"sources":["/Users/juanrosario/Documents/HTMLphones/Client/src/Components/Products/index.js"],"names":["React","Productheader","fetch","ProductShell","productsEndpoint","initialState","products","error","Product","Component","constructor","state","componentDidMount","data","jsonData","json","setState","console","log","err","render","map","e","names"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,OAAOC,YAAP,MAAyB,WAAzB;AAEA,MAAMC,gBAAgB,GAAG,YAAzB;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,EADS;AAEnBC,EAAAA,KAAK,EAAE;AAFY,CAArB;AAIA,OAAO,MAAMC,OAAN,SAAsBR,KAAK,CAACS,SAA5B,CAAsC;AAC3CC,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAaN,YAAb;AACD;;AACD,QAAMO,iBAAN,GAA0B;AACxB,QAAI;AACF,YAAMC,IAAI,GAAG,MAAMX,KAAK,CAACE,gBAAD,CAAxB;AACA,YAAMU,QAAQ,GAAG,MAAMD,IAAI,CAACE,IAAL,EAAvB;AACA,WAAKC,QAAL,CAAc;AAAEV,QAAAA,QAAQ,EAAEQ;AAAZ,OAAd,EAAsC,MAAM;AAC1CG,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,KAAL,CAAWL,QAAvB;AACD,OAFD;AAGD,KAND,CAME,OAAOa,GAAP,EAAY;AACZF,MAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AACA,WAAKH,QAAL,CAAc;AAAET,QAAAA,KAAK,EAAE;AAAT,OAAd;AACD;AACF;;AACDa,EAAAA,MAAM,GAAG;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WACE;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKT,KAAL,CAAWL,QAAX,CAAoBe,GAApB,CAAwBC,CAAC,IAAI;AAC5B,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKA,CAAC,CAACC,KAAP,CADF,MADF;AAKD,OANA,CADH;AANF;AAgBD;;AAzC0C;AA2C7C,eAAef,OAAf","sourcesContent":["import React from \"react\";\nimport Productheader from \"./productheader\";\nimport fetch from \"isomorphic-fetch\";\nimport ProductShell from \"./Product\";\n\nconst productsEndpoint = \"/allPhones\";\nconst initialState = {\n  products: [],\n  error: false\n};\nexport class Product extends React.Component {\n  constructor() {\n    super();\n    this.state = initialState;\n  }\n  async componentDidMount() {\n    try {\n      const data = await fetch(productsEndpoint);\n      const jsonData = await data.json();\n      this.setState({ products: jsonData }, () => {\n        console.log(this.state.products);\n      });\n    } catch (err) {\n      console.log(err);\n      this.setState({ error: true });\n    }\n  }\n  render() {\n    // const products = this.state.products.map(product => (\n    //   <ProductShell\n    //     image={product.image}\n    //     name={product.Names}\n    //     price={product.price}\n    //   />\n    // ));\n    return (\n      // <React.Fragment>\n      //   <Productheader />\n      //   {products}\n      // </React.Fragment>\n\n      <div>\n        {this.state.products.map(e => {\n          return (\n            <div>\n              <h1>{e.names}</h1>;\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n}\nexport default Product;\n"]},"metadata":{},"sourceType":"module"}