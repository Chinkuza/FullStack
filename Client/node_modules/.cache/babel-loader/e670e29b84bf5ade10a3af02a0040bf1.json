{"ast":null,"code":"var _jsxFileName = \"/Users/juanrosario/Documents/HTMLphones/Client/src/Components/Products/index.js\";\nimport React from \"react\";\nimport Productheader from \"./productheader\";\nimport fetch from \"isomorphic-fetch\";\nimport ProductShell from \"./Product\";\nconst productsEndpoint = \"/allPhones\";\nconst initialState = {\n  products: [],\n  //all our filters\n  filtered: false,\n  filteredArray: [],\n  error: false\n};\n\nclass Product extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = initialState;\n\n    this.handleFilter = filter => {\n      let newItems = [];\n      const allProducts = this.state.products.slice();\n\n      if (filter == \"no filter\") {\n        this.setState({\n          filtered: false\n        });\n      }\n\n      allProducts.filter(product => {\n        return product.Names === filter;\n      });\n      this.setState({\n        filteredArray: allProducts,\n        filtered: true\n      });\n    };\n  }\n\n  //didmount is invoked immediately after a component is mounted\n  async componentDidMount() {\n    try {\n      const data = await fetch(productsEndpoint);\n      const jsonData = await data.json(); //Sets state to parsed json data\n\n      this.setState({\n        products: jsonData\n      }, () => {\n        //logs to make sure state worked\n        console.log(this.state.products);\n      });\n    } catch (err) {\n      console.log(err);\n      this.setState({\n        error: true\n      });\n    }\n  }\n\n  render() {\n    const products = this.state.products.map(product => React.createElement(ProductShell, {\n      image: product.URL,\n      name: product.Names,\n      price: product.Price,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }));\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Productheader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => this.handleFilter(\"no filter\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"No filter\"), React.createElement(\"button\", {\n      onClick: () => this.handleFilter(\"iphone\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Iphones\"), React.createElement(\"button\", {\n      onClick: () => this.handleFilter(\"Samsung\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Samsung\"), React.createElement(\"button\", {\n      onClick: () => this.handleFilter(\"LG\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"LG\")), products) // <div>\n    //   {this.state.products.map(e => {\n    //     return (\n    //       <div>\n    //         <h1>{e[\"Names\"]}</h1>\n    //         <img src={e[\"URL\"]}></img>\n    //       </div>\n    //     );\n    //   })}\n    // </div>\n    ;\n  }\n\n}\n\nexport default Product;","map":{"version":3,"sources":["/Users/juanrosario/Documents/HTMLphones/Client/src/Components/Products/index.js"],"names":["React","Productheader","fetch","ProductShell","productsEndpoint","initialState","products","filtered","filteredArray","error","Product","Component","state","handleFilter","filter","newItems","allProducts","slice","setState","product","Names","componentDidMount","data","jsonData","json","console","log","err","render","map","URL","Price"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Productheader from \"./productheader\";\nimport fetch from \"isomorphic-fetch\";\nimport ProductShell from \"./Product\";\n\nconst productsEndpoint = \"/allPhones\";\nconst initialState = {\n  products: [],\n  //all our filters\n  filtered: false,\n  filteredArray: [],\n  error: false\n};\n\nclass Product extends React.Component {\n  state = initialState;\n\n  //didmount is invoked immediately after a component is mounted\n  async componentDidMount() {\n    try {\n      const data = await fetch(productsEndpoint);\n      const jsonData = await data.json();\n      //Sets state to parsed json data\n      this.setState({ products: jsonData }, () => {\n        //logs to make sure state worked\n        console.log(this.state.products);\n      });\n    } catch (err) {\n      console.log(err);\n      this.setState({ error: true });\n    }\n  }\n\n  handleFilter = filter => {\n    let newItems = [];\n    const allProducts = this.state.products.slice();\n\n    if (filter == \"no filter\") {\n      this.setState({\n        filtered: false\n      });\n    }\n\n    allProducts.filter(product => {\n      return product.Names === filter;\n    });\n\n    this.setState({\n      filteredArray: allProducts,\n      filtered: true\n    });\n  };\n  render() {\n    const products = this.state.products.map(product => (\n      <ProductShell\n        image={product.URL}\n        name={product.Names}\n        price={product.Price}\n      />\n    ));\n\n    return (\n      <React.Fragment>\n        <Productheader />\n        <div>\n          <button onClick={() => this.handleFilter(\"no filter\")}>\n            No filter\n          </button>\n          <button onClick={() => this.handleFilter(\"iphone\")}>Iphones</button>\n          <button onClick={() => this.handleFilter(\"Samsung\")}>Samsung</button>\n          <button onClick={() => this.handleFilter(\"LG\")}>LG</button>\n        </div>\n        {products}\n      </React.Fragment>\n      // <div>\n      //   {this.state.products.map(e => {\n      //     return (\n      //       <div>\n      //         <h1>{e[\"Names\"]}</h1>\n      //         <img src={e[\"URL\"]}></img>\n      //       </div>\n      //     );\n      //   })}\n      // </div>\n    );\n  }\n}\n\nexport default Product;\n"]},"metadata":{},"sourceType":"module"}